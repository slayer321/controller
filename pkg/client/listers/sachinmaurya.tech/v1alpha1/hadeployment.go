/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/slayer321/crdcreation/pkg/apis/sachinmaurya.tech/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HADeploymentLister helps list HADeployments.
// All objects returned here must be treated as read-only.
type HADeploymentLister interface {
	// List lists all HADeployments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HADeployment, err error)
	// HADeployments returns an object that can list and get HADeployments.
	HADeployments(namespace string) HADeploymentNamespaceLister
	HADeploymentListerExpansion
}

// hADeploymentLister implements the HADeploymentLister interface.
type hADeploymentLister struct {
	indexer cache.Indexer
}

// NewHADeploymentLister returns a new HADeploymentLister.
func NewHADeploymentLister(indexer cache.Indexer) HADeploymentLister {
	return &hADeploymentLister{indexer: indexer}
}

// List lists all HADeployments in the indexer.
func (s *hADeploymentLister) List(selector labels.Selector) (ret []*v1alpha1.HADeployment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HADeployment))
	})
	return ret, err
}

// HADeployments returns an object that can list and get HADeployments.
func (s *hADeploymentLister) HADeployments(namespace string) HADeploymentNamespaceLister {
	return hADeploymentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HADeploymentNamespaceLister helps list and get HADeployments.
// All objects returned here must be treated as read-only.
type HADeploymentNamespaceLister interface {
	// List lists all HADeployments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HADeployment, err error)
	// Get retrieves the HADeployment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.HADeployment, error)
	HADeploymentNamespaceListerExpansion
}

// hADeploymentNamespaceLister implements the HADeploymentNamespaceLister
// interface.
type hADeploymentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HADeployments in the indexer for a given namespace.
func (s hADeploymentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HADeployment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HADeployment))
	})
	return ret, err
}

// Get retrieves the HADeployment from the indexer for a given namespace and name.
func (s hADeploymentNamespaceLister) Get(name string) (*v1alpha1.HADeployment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("hadeployment"), name)
	}
	return obj.(*v1alpha1.HADeployment), nil
}
